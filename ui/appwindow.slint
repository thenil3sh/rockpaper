import "./JetBrainsMono-Regular.ttf";
import "./JetBrainsMono-Regular.ttf";
import "./PixelifySans-Bold.ttf"; 
import "./PixelifySans-Medium.ttf";
import "./PixelifySans-SemiBold.ttf";
import "./PixelifySans-Regular.ttf";

enum Weapon {
    Rock,
    Paper,
    Scissors,
}

// component Hint {
//     property <string> text;
//     in-out property <bool> appear : false;
//     y : appear ? 20px : - hinttext.height - 30px;
//     Rectangle {
//         border-radius: 10px;
//         background : #d65d0e;
//         height : hinttext.height + 15px;
//         width : hinttext.width + 30px;
//         drop-shadow-blur: 50px;
//         drop-shadow-color: #1d2021;
//         drop-shadow-offset-y: 5px;

//         hinttext := Text {
//             wrap : word-wrap;
//             horizontal-alignment: center;
//             text : "! Hold what you choose !";
//             color : #282828;
//             max-width: 100px;
//             min-width: 20px;
//             font-family: "JetBrains Mono";
            
//         }
//     }
//     animate y {
//         duration : 500ms;
//         easing : ease-out-back;
//     }
//     Timer {
//         property <float> value : 0.0;
//         interval : 100ms;
//         running: appear;
//         triggered => {
//             value += 0.1;
//             if value >= 3.5 {
//                 value = 0;
//                 root.y = -hinttext.height - 30px;
//                 appear = false;
//             }
//         }
//     }
    
// }

export component AppWindow inherits Window {
    callback picked(int);
    in property <bool> imgVis: true;
    in property <bool> game_over : false;
    in property <int> winning;
    property <color> testcolor: #282828;
    property <bool> weapon_pressed: ta.pressed || ta2.pressed || ta3.pressed;
    property <float> value: weapon_pressed ? 4 : 4;
    property <float> on_select_opacity: 1;
    property <float> win_count;
    in property <float> next_round_opacity: 1;

    in property <int> standing: pc_score == 0 && yr_score == 1 ? 9 : yr_score - pc_score;
    in property <int> pc_score;
    in property <int> yr_score;
    in property <int> yr_pick: 0;
    in property <int> pc_pick: 0;
    in property <bool> last_round : false;
    in property <string> result_text;

    callback match_selected(int);
    callback setup_table();
    in property <bool> start_passive: Rounder.y > 140px;
    width: 600px;
    height: 450px;
    background: #282828;
    title: "Rock Paper";
    icon : @image-url("./icon.png");
    one_point_five := Timer {
        interval: 1.5s;
        running: false;
        triggered => {
            setup_table();
            setupWep.running = true;
        }
    }

    one_sec := Timer {
        interval: 1000ms;
        running: false;
        triggered => {
            NextScreen.visible = false;
            WeaponScreen.visible = true;
            WeaponScreen.opacity = 1;
            WeaponScreen.passive = false;
            self.running = false;
        }
    }

    NextScreen := Rectangle {
        visible: true;
        Rounder := Text {
            opacity: next_round_opacity;
            x: 337px;
            y: 150px;
            //51px;//84px;//117px;//150px;
            horizontal-alignment: center;
            font-size: 25px;
            width : 30px;
            font-family: "JetBrains Mono";
            color: #d65d0e;
            text: "_\na\n2\n5\n9\n";
            rounds := TouchArea {
                clicked() => {
                    if self.pressed-y > 0 && self.pressed-y < 33px {
                        Rounder.y = 150px;
                    } else if self.pressed-y > 33px && self.pressed-y < 66px {
                        Rounder.y = 117px;
                    } else if self.pressed-y > 66px && self.pressed-y < 99px {
                        Rounder.y = 84px;
                    } else if self.pressed-y > 99px && self.pressed-y < 132px {
                        Rounder.y = 51px;
                    } else if self.pressed-y > 132px && self.pressed-y < self.height {
                        Rounder.y = 17px;
                    }
                }
            }

            animate y, opacity {
                duration: 250ms;
                easing: ease-out-back;
            }
        }

        Rectangle {
            opacity: 0.5;
            height: 150px;
            y: 0px;
            background: #282828;
        }

        Rectangle {
            opacity: 0.5;
            y: 183px;
            background: #282828;
        }

        Text {
            opacity: next_round_opacity;
            y: 150px;
            text: "Next round for   win(s) ?";
            font-size: 25px;
            font-family: "JetBrains Mono";
            color: #ebdbb2;
            animate opacity {
                duration: 250ms;
                easing: ease-out-back;
            }
        }

        startBtn := Rectangle {
            y: start_passive ? 350px : Start.pressed ? 300px : Start.has-hover ? 295px : 300px;
            opacity: start_passive ? 0 : 1;
            background: start_passive ? #d65d0e00 : #d65d0e;
            drop-shadow-blur: start_passive ? 15px : 30px;
            drop-shadow-color: #1d2021c1;
            width: start_passive ? 100px : Start.pressed ? 140px : Start.has-hover ? 150px : 140px;
            border-radius: 15px;
            height: start_passive ? 30px : Start.pressed ? 65px : Start.has-hover ? 75px : 65px;
            Image {
                x: 20px;
                source: @image-url("./play.png");
                width: 25px;
            }

            Text {
                x: Start.pressed ? 60px : Start.has-hover ? 70px : 60px;
                text: "Start";
                font-size: 20px;
                color: #282828;
                font-family: "JetBrains Mono";
                animate x {
                    duration: 250ms;
                    easing: ease-out-back;
                }
            }

            animate y, drop-shadow-blur, drop-shadow-color, height, width, opacity, background {
                duration: 250ms;
                easing: ease-out-back;
            }
            Start := TouchArea {
                clicked() => {
                    starter.running = true;
                    one_sec.running = true;
                    one_point_five.running = true;
                    setupWep.running = true;
                }
            }
        }

        peep := Text {
            visible: false;
            text: Rounder.y / 1px;
            font-size: 30px;
            color: white;
        }
    }

    starter := Timer {
        interval: 500ms;
        running: false;
        triggered => {
            if Rounder.y == 150px {
            } else if Rounder.y == 117px {
                match_selected(1);
            } else if Rounder.y == 84px {
                match_selected(2);
            } else if Rounder.y == 51px {
                match_selected(5);
            } else if Rounder.y == 17px {
                match_selected(9);
            }
            self.running = false;
        }
    }

    timer := Timer {
        interval: 250ms;
        running: weapon_pressed;
        triggered => {
            value = self.running ? value - 0.25 : 3;
            if value == 4 {
                counter.y = 50px;
            } else if value == 3.25 {
                if ta3.pressed {
                    rockImg.rotation-angle = -10deg;
                } else if ta.pressed {
                    paperImg.rotation-angle = -10deg;
                } else if ta2.pressed {
                    scissImg.rotation-angle = -10deg;
                }
            } else if value == 3.00 {
                counter.y = 20px;
                if ta3.pressed {
                    rockImg.rotation-angle = 10deg;
                } else if ta.pressed {
                    paperImg.rotation-angle = 10deg;
                } else if ta2.pressed {
                    scissImg.rotation-angle = 10deg;
                }
            } else if value == 2.75 {
                if ta3.pressed {
                    rockImg.rotation-angle = 0deg;
                } else if ta.pressed {
                    paperImg.rotation-angle = 0deg;
                } else if ta2.pressed {
                    scissImg.rotation-angle = 0deg;
                }
            } else if value == 2.25 {
                if ta3.pressed {
                    rockImg.rotation-angle = -10deg;
                } else if ta.pressed {
                    paperImg.rotation-angle = -10deg;
                } else if ta2.pressed {
                    scissImg.rotation-angle = -10deg;
                }
            } else if value == 2.00 {
                if ta3.pressed {
                    rockImg.rotation-angle = 10deg;
                } else if ta.pressed {
                    paperImg.rotation-angle = 10deg;
                } else if ta2.pressed {
                    scissImg.rotation-angle = 10deg;
                }
                counter.y = -35px;
            } else if value == 1.75 {
                if ta3.pressed {
                    rockImg.rotation-angle = 0deg;
                } else if ta.pressed {
                    paperImg.rotation-angle = 0deg;
                } else if ta2.pressed {
                    scissImg.rotation-angle = 0deg;
                }
            } else if value == 1.25 {
                if ta3.pressed {
                    rockImg.rotation-angle = -10deg;
                } else if ta.pressed {
                    paperImg.rotation-angle = -10deg;
                } else if ta2.pressed {
                    scissImg.rotation-angle = -10deg;
                }
            } else if value == 1.00 {
                if ta3.pressed {
                    rockImg.rotation-angle = 10deg;
                } else if ta.pressed {
                    paperImg.rotation-angle = 10deg;
                } else if ta2.pressed {
                    scissImg.rotation-angle = 10deg;
                }
                counter.y = -85px;
            } else if value == 0.75 {
                if ta3.pressed {
                    rockImg.rotation-angle = 0deg;
                } else if ta.pressed {
                    paperImg.rotation-angle = 0deg;
                } else if ta2.pressed {
                    scissImg.rotation-angle = 0deg;
                }
            } else if value == 0 {
                counter.y = -135px;
                if ta.pressed {
                    picked(0);
                } else if ta2.pressed {
                    picked(1);
                } else if ta3.pressed {
                    picked(2);
                }
                result-imer.running = true;
                WeaponScreen.passive = true;
            } else if value < -0.5 {
                WeaponScreen.visible = false;
                value = 3.0;
            }
        }
    }

    property <int> weapon_time: 0;
    setupWep := Timer {
        interval: 100ms;
        running: false;
        triggered => {
            weapon_time += 1;
            if weapon_time == 1 {
                WeaponScreen.opacity = 1;
                btn3.rock_passive = false;
            }
        }
    }

    in property <int> weapon_opacity: 0;
    WeaponScreen := Rectangle {
        property <bool> passive: true;
        visible: false;
        opacity: weapon_opacity;
        animate opacity { duration: 200ms; }
        Text {
            horizontal-alignment: center;
            color: #fe8019;
            text: ". . .\n\nRock\n\nPaper\n\nScissors\n";
            opacity: 100%;
            font-size: 20px;
            x: (root.width - self.width) / 2;
            y: root.height * 3 / 4 + (ta3.has-hover ? - 42px : ta.has-hover ? - 96px : ta2.has-hover ? - 150px : 10px);
            font-family: "JetBrains Mono";
            animate y {
                duration: 250ms;
                delay: 200ms;
                easing: ease-out-quad;
            }
        }

        counter := Text {
            opacity: weapon_pressed ? 1 : 0;
            horizontal-alignment: center;
            font-size: 40px;
            width : 40px;
            color: #8ec07c;
            font-family: "JetBrains Mono";
            text: " \n3\n2\n1\n";
            animate y, opacity {
                duration: 500ms;
                easing: ease-in-out-back;
            }
        }

        Rectangle {
            y: 0;
            background: testcolor;
            height: 75px;
        }

        Rectangle {
            visible: true;
            y: 125px;
            background: testcolor;
            height: root.height * 3 / 4 - 115px;
        }

        Rectangle {
        // visible: false;
        background: testcolor;
            y: root.height * 3 / 4 + 40px;
        }

        background: #282828;
        btn2 := Rectangle {
            opacity: passive ? 0 : 1;
            background: #d65d0e;
        // visible: false;
        width: ta2.has-hover ? 137.5px : 125px;
            height: ta2.has-hover ? 137.5px : 125px;
            border-radius: 25px;
            drop-shadow-blur: 30px;
            drop-shadow-color: ta2.has-hover ? #fe801910 : #1d2021;
            x: ta2.has-hover ? 399.75px : 389.25px;
            y: ta2.has-hover ? 141.25px : passive ? 200px : 162.5px;
            drop-shadow-offset-x: ta2.has-hover ? - 7.75px : - 5px;
            drop-shadow-offset-y: ta2.has-hover ? 21.25px : 0px;

            scissImg := Image {
                source: @image-url("./scissors.png");
                height: 70px;
                rotation-origin-y: 60px;

                animate rotation-angle {
                    duration: 100ms;
                    easing: ease-out;
                }
            }

            ta2 := TouchArea {
                clicked => {
                    value = timer.running ? 3.5 : 3.5;
                    counter.y = timer.running ? 100px : 100px;
                    scissImg.rotation-angle = timer.running ? 0deg : 0deg;
                }
            }

            animate opacity {
                duration: 500ms;
                easing: ease-out-back;
            }
            animate y, drop-shadow-color, height, width, x, drop-shadow-offset-x, drop-shadow-offset-y {
                duration: 750ms;
                easing: ease-out-elastic;
            }
        }

        btn3 := Rectangle {
            property <bool> rock_passive: true;
            property <length> rockx: ta3.has-hover ? 66.75px : rock_passive ? 100px : 87.5px;
            property <length> rocky: ta3.has-hover ? 141.25px : rock_passive ? 180px : passive ? 200px : 162.5px;
            opacity: passive ? 0 : 1;
            background: #d65d0e;
        // visible: false;
        width: ta3.has-hover ? 137.5px : 125px;
            height: ta3.has-hover ? 137.5px : 125px;
            border-radius: 25px;
            drop-shadow-blur: 30px;
            drop-shadow-color: ta3.has-hover ? #fe801910 : #1d2021;
            x: rockx;
            y: rocky;
            drop-shadow-offset-x: ta3.has-hover ? 7.75px : 5px;
            drop-shadow-offset-y: ta3.has-hover ? 21.25px : 0px;
            rockImg := Image {
                source: @image-url("./rock.png");
                rotation-origin-y: 50px;
                width: 60px;
                animate rotation-angle, opacity {
                    duration: 100ms;
                    easing: ease-out;
                }
            }

            ta3 := TouchArea {
                clicked => {
                    value = timer.running ? 3.5 : 3.5;
                    counter.y = timer.running ? 100px : 100px;
                    rockImg.rotation-angle = timer.running ? 0deg : 0deg;
                }
            }

            animate opacity {
                duration: 500ms;
                easing: ease-out-back;
            }
            animate y, drop-shadow-color, height, width, x, drop-shadow-offset-x, drop-shadow-offset-y {
                duration: 750ms;
                easing: ease-out-elastic;
            }
        }

        btn := Rectangle {
            opacity: passive ? 0 : 1;
            background: #d65d0e;
            width: ta.has-hover ? 137.5px : 125px;
            height: ta.has-hover ? 137.5px : 125px;
            border-radius: 25px;
            drop-shadow-blur: 30px;
            drop-shadow-color: ta.has-hover ? #fe801910 : #1d2021;
            x: ta.has-hover ? 231.25px : 237.5px;
            y: ta.has-hover ? 141.25px : passive ? 200px : 162.5px;
            drop-shadow-offset-y: ta.has-hover ? 21.25px : 0px;
        // visible : false;
        
        paperImg := Image {
                x: 3px + (parent.width - self.width) / 2;
                source: @image-url("./paper.png");
                width: 65px;
                rotation-origin-y: 55px;
                animate rotation-angle {
                    duration: 100ms;
                    easing: ease-out;
                }
            }

            ta := TouchArea {
                clicked => {
                    value = timer.running ? 3.5 : 3.5;
                    counter.y = timer.running ? 100px : 100px;
                    paperImg.rotation-angle = timer.running ? 0deg : 0deg;
                }
            }

            animate opacity {
                duration: 500ms;
                easing: ease-out-back;
            }
            animate y, drop-shadow-color, height, width, x, drop-shadow-offset-x, drop-shadow-offset-y {
                duration: 750ms;
                easing: ease-out-elastic;
            }
        }

        Text {
            color: #ebdbb2;
            text: "Your pick";
            opacity: 100%;
            x: (root.width - self.width) / 2;
            y: root.height * 3 / 4 - 10px;
            font-family: "JetBrains Mono";
            font-size: 15px;
        }
    }

    resutlScr := Rectangle {

        in-out property <bool> result_a: true;
        property <bool> passive;
        property <int> pc_hand: 1;
        property <string> yr_hand: "./res_sci.png";
        property <int> result_time: 0;
        opacity: 0;
        visible: false;
        y: passive ? - 50px : 0px;
        Rectangle {
            opacity: !result_a ? 0 : 0.8;
            y: !result_a ? 450px : - 1.2 * 450px;
            height: root.height * 2;
            background: @linear-gradient(180deg, rgba(80,73,69,0) 0%, rgba(80,73,69,1) 36%, rgba(80,73,69,0.7763306005996149) 54%, rgba(40,40,40,0) 100%);
            animate y {
                delay: 100ms;
                duration: 700ms;
                easing: ease-out;
            }
        }

        Image {
            visible : winning == 0;
            source: @image-url("./win_back.png");
            height : root.height;
        }
        Image {
            visible : winning == 1;
            source: @image-url("./lose_back.png");
            height : root.height;
        }
        Image {
            visible : winning == 2;
            source: @image-url("./pap_back.png");
            height : root.height;
        }
        Image {
            visible : winning == 3;
            source: @image-url("./sci_back.png");
            height : root.height;
        }
        Image {
            visible : winning == 4;
            source  : @image-url("./roc_back.png");
            height : root.height;
        }

        result_out := Timer {
            property <int> value: 0;
            interval: 100ms;
            running: false;
            triggered => {
                value += 1;
                if value == 5 {
                    passive = true;
                    nextBtn.next_passive = true;
                    resutlScr.opacity = 0;
                } else if value == 7 {
                    GameOverScr.visible = game_over;
                    GameOverScr.opacity = game_over ? 1 : 0;
                    GameOverScr.y = game_over ? 0px : 450px;
                    winText.opacity = 0;
                    //subtext.opacity = 0;
                } else if value == 10 {
                    resutlScr.visible = false;
                    WeaponScreen.visible = !game_over;
                    WeaponScreen.passive = !WeaponScreen.visible;
                } else if value == 15 {
                    overTimer.running = game_over;
                    value = 0;
                    self.running = false;
                }
            }
        }

        result_imer := Timer {
            interval: 100ms;
            running: false;
            triggered => {
                result_time += 1;
                if result_time == 1 {
                    WeaponScreen.visible = false;
                    resutlScr.visible = true;
                    result_a = false;
                    passive = true;
                } else if result_time == 3 {
                    resutlScr.opacity = 1;
                    passive = false;
                } else if result_time == 20 {
                    result_a = true;
                } else if result_time == 25 {
                    winText.opacity = 1;
                    //subtext.opacity = 1;
                } else if result_time > 25 {
                    nextBtn.next_passive = false;
                    result_time = 0;
                    self.running = false;
                }
            }
        }

        animate y {
            duration: 300ms;
            easing: ease-out-back;
        }
        animate opacity {
            duration: 200ms;
            easing: ease-out;
        }

        Rectangle {
            width: 175px;
            height: 100px;
            you := Text {
                opacity : !result_a ? 0 : 1;
                text: yr_score;
                color: #ebdbb2;
                font-size: scoreta.has-hover ? 30px : 60px;
                font-family: "JetBrains Mono";
                x: scoreta.has-hover ? 41px : 30px;
                y: !result_a ? -50px : scoreta.has-hover ? -15px : 15px;
                animate y, font-size, x {
                    duration: 350ms;
                    easing: ease-out-back;
                }
            }

            pc := Text {
                opacity : !result_a ? 0 : 1;
                text: pc_score;
                color: #ebdbb2;
                font-size: scoreta.has-hover ? 30px : 60px;
                font-family: "JetBrains Mono";
                x: parent.width - (scoreta.has-hover ? 57px : 68px);
                y: !result_a ? -50px : scoreta.has-hover ? -15px : 15px;
                animate y, font-size, x {
                    delay: 100ms;
                    duration: 350ms;
                    easing: ease-out-back;
                }
            }

            Rectangle {
                opacity: !result_a ? 1 : 0;
                background: #282828;
                Image {
                    x: -79.7px;
                    source: @image-url("./lose_back.png");
                }

                y: -85px;
                height: 100px;
                animate opacity {
                    delay: 100ms;
                    duration: 90ms;
                }
            }

            Image {
                visible: yr_pick == 2;
                source: @image-url("./res_roc.png");
                width: scoreta.has-hover || !result_a ? 45px : 25px;
                x: scoreta.has-hover || !result_a ? 27px : 37px;
                y: scoreta.has-hover || !result_a ? 25px : 85px;
                animate width, y, x {
                    duration: 350ms;
                    easing: ease-out-back;
                }
            }

            Image {
                visible: yr_pick == 1;
                source: @image-url("./res_sci.png");
                width: scoreta.has-hover || !result_a ? 45px : 25px;
                x: scoreta.has-hover || !result_a ? 25px : 35px;
                y: scoreta.has-hover || !result_a ? 25px : 85px;
                //80px;
                animate width, y, x {
                    duration: 350ms;
                    easing: ease-out-back;
                }
            }

            Image {
                visible: yr_pick == 0;
                source: @image-url("./res_pap.png");
                width: scoreta.has-hover || !result_a ? 45px : 25px;
                x: scoreta.has-hover || !result_a ? 29px : 39px;
                y: scoreta.has-hover || !result_a ? 25px : 85px;
                //80px;
                animate width, y, x {
                    duration: 350ms;
                    easing: ease-out-back;
                }
            }

            Image {
                visible: pc_pick == 2;
                source: @image-url("./res_roc.png");
                width: scoreta.has-hover || !result_a ? 45px : 25px;
                x: scoreta.has-hover || !result_a ? 104px : 114px;
                y: scoreta.has-hover || !result_a ? 25px : 85px;
                animate width, y, x {
                    delay: 100ms;
                    duration: 350ms;
                    easing: ease-out-back;
                }
            }

            Image {
                visible: pc_pick == 1;
                source: @image-url("./res_sci.png");
                width: scoreta.has-hover || !result_a ? 45px : 25px;
                x: scoreta.has-hover || !result_a ? 103px : 113px;
                y: scoreta.has-hover || !result_a ? 25px : 85px;
                animate width, y, x {
                    delay: 100ms;
                    duration: 350ms;
                    easing: ease-out-back;
                }
            }

            Image {
                visible: pc_pick == 0;
                source: @image-url("./res_pap.png");
                width: scoreta.has-hover || !result_a ? 45px : 25px;
                x: scoreta.has-hover || !result_a ? 107px : 115px;
                y: scoreta.has-hover || !result_a ? 25px : 85px;
                animate width, y, x {
                    delay: 100ms;
                    duration: 350ms;
                    easing: ease-out-back;
                }
            }

            scoreta := TouchArea { }
        }

        userFace := Rectangle {
            visible: standing >= 6;
            width: 125px;
            background: #fe8019;
            height: 125px;
            border-radius: 30px;
            drop-shadow-blur: 30px;
            drop-shadow-color: #1d2021;
            x: 75px;
            Image {
                source: @image-url("./smiley.png");
                width: 70px;
            }
        }

        Rectangle {
            visible: standing >= 2 && standing < 6;
            width: 125px;
            background: #fe8019;
            height: 125px;
            border-radius: 30px;
            drop-shadow-blur: 30px;
            drop-shadow-color: #1d2021;
            x: 75px;
            Image {
                source: @image-url("./slight_smile.png");
                width: 70px;
            }
        }

        Rectangle {
            visible: standing < 2 && standing > -2;
            width: 125px;
            background: #fe8019;
            height: 125px;
            border-radius: 30px;
            drop-shadow-blur: 30px;
            drop-shadow-color: #1d2021;
            x: 75px;
            Image {
                source: @image-url("./neutral_face.png");
                width: 70px;
            }
        }

        Rectangle {
            visible: standing > -5 && standing < -1;
            width: 125px;
            background: #fe8019;
            height: 125px;
            border-radius: 30px;
            drop-shadow-blur: 30px;
            drop-shadow-color: #1d2021;
            x: 75px;
            Image {
                source: @image-url("./disappointed.png");
                width: 70px;
            }
        }

        Rectangle {
            visible: standing <= -5;
            width: 125px;
            background: #fe8019;
            height: 125px;
            border-radius: 30px;
            drop-shadow-blur: 30px;
            drop-shadow-color: #1d2021;
            x: 75px;
            Image {
                source: @image-url("./dizzy_face.png");
                width: 70px;
            }
        }

        Text {
            text: "You";
            font-family: "JetBrains Mono";
            color: #ebdbb2;
            x: userFace.x + (userFace.width - self.width) / 2;
            y: 300px;
            font-size: 17px;
        }

        Text {
            text: "This PC";
            font-family: "JetBrains Mono";
            color: #ebdbb2;
            x: pcFace.x + (pcFace.width - self.width) / 2;
            y: 300px;
            font-size: 17px;
        }

        pcFace := Rectangle {
            width: 125px;
            x: root.width - 200px;
            background: #fe8019;
            height: 125px;
            border-radius: 30px;
            drop-shadow-blur: 30px;
            drop-shadow-color: #1d2021;
            Image {
                source: @image-url("./pc.png");
                width: 80px;
            }
        }

        nextBtn := Rectangle {
            property <bool> next_passive: true;
            background: nextta.pressed ? #e97617 : #fe8019;
            height: nextta.pressed ? 55px : nextta.has-hover ? 60px : next_passive ? 40px : 55px;
            width: nextta.pressed ? 115px : nextta.has-hover ? 130px : next_passive ? 95px : 115px;
            y: nextta.pressed ? 345px : nextta.has-hover ? 340px : next_passive ? 360px : 345px;
            opacity: next_passive ? 0 : 1;
            border-radius: 20px;
            drop-shadow-blur: 30px;
            drop-shadow-color: #1d2021;
            Text {
                font-family: "JetBrains Mono";
                font-size: 25px;
                color: #282828;
                text: "Next";
            }

            nextta := TouchArea {
                clicked => {
                    result-out.running = true;
                }
            }

            animate width, height, y, opacity, background {
                duration: 350ms;
                easing: ease-out-back;
            }
        }
        
        winText := Text {
            opacity : 0;
            text : result_text;
            y : scoreta.has-hover ? 60px : 85px;
            color : #ebdbb2;
            font-size : 40px;
            font-family : "JetBrains Mono";
            animate y, opacity {
                duration: 350ms;
                easing : ease-out-back;
            }
        }
        // subtext := Text {////////////////////////////////////////////////////neeeds attention!!
        //     opacity : 0;
        //     text : "bruh okay?";
        //     y : scoreta.has-hover ? 105px : 130px;
        //     color : #bdae93;
        //     font-family : "JetBrains Mono";
        //     animate y, opacity {
        //         delay : 50ms;
        //         duration : 350ms;
        //         easing : ease-out-back;
        //     }
        // }
    }
    in property <string> pcString : "Sad :(";
    property <int> time : 0;
    in property <int> win : 1;
    
    overTimer := Timer {
        interval : 100ms;
        running : false;
        triggered => {
            time += 1;
            if time == 6 {

                gradBack.y = -250px;
                Roundovertext.opacity = 0;
                Roundovertext.y = 200px; 
            } else if time == 7 {
                YOU.opacity = 1;
            } else if time == 12 {
                
            } else if time == 16 {
                YOU.y = 130px;
                YOU.text = "you";
                if win == 1 {
                    YOU.font-family = "Pixelify Sans";
                }
                win-lost.font-weight = win == 1 ? 100 : win == 0 ? 600 : 300;
                f-lose-back.opacity = 0;
                win-lost.font-size = win == 1 ? 70px : win == 0 ? 50px : 25px;
                win-lost.y = win == 1 ? 200px : win == 0 ? 210px : 225px;
                win-lost.opacity = 1;
                gradBack.y = -450px;
                gradResBack.y = -350px;
            } else if time == 17{
                if win == 1{
                    win-lost.font-family = "Pixelify Sans";
                    YOU.font-weight = 300;
                
                win-lost.font-weight = 300;
                }
            } else if time == 18{
                if win == 1{
                f_win_back.opacity = 1;
                win-lost.font-weight = 500;
                YOU.font-weight = 500;
            } else if win == 2 {
                f-lose-back.opacity = 1;
            subText.y = 260px;
            subText.opacity = 1;
            } else {
                f-lose-back.opacity = 1;
                subText.opacity = 1;
            }
            } else if time >= 19 && Math.mod(time, 4) == 3 {
                YOU.text = "you";
                if win == 1{
                win-lost.font-size = 73px;
                YOU.font-size= 73px;
                win-lost.font-weight = 900;
                YOU.font-weight = 900;
                }
            } else if time >= 20 && Math.mod(time, 4) == 0 {
                if win == 1{
                win-lost.font-size = 70px;
                YOU.font-size= 70px;
                YOU.font-weight = 100;
                win-lost.font-weight = 100;
                }
            }else if time >= 21 && Math.mod(time, 4) == 1 {
                if win == 1{
                win-lost.font-size = 71px;
                YOU.font-size = 71px;
                YOU.font-weight= 350;
                win-lost.font-weight = 350;
                }
            } else if time >= 22 && Math.mod(time, 4) == 2 {
                if win == 1{
                win-lost.font-size = 72px;
                YOU.font-size= 72px;
                YOU.font-weight = 600;
                win-lost.font-weight = 600;
                }
            }
        }
    }
    GameOverScr := Rectangle {
        y : 100px;
        animate y, opacity {
            duration : 300ms;
            easing : ease-out-back;
        }
        height : 600px;
        visible : false;
        opacity : 0;
        gradResBack := Rectangle {
            y : 450px;
            height : 450px * 1.5;
            background: win == 1 ? @linear-gradient(180deg, rgba(40, 40, 40,0) 0%, rgba(104, 157, 106,1) 36%, rgba(104, 157, 106,0.7763306005996149) 54%, rgba(40,40,40,0) 100%) : win == 0 ? @linear-gradient(180deg, rgba(40, 40, 40,0) 0%, rgba(204, 35, 29,1) 36%, rgba(204, 35, 29,0.7763306005996149) 54%, rgba(40,40,40,0) 100%) : @linear-gradient(180deg, rgba(80,73,69,0) 0%, rgba(80,73,69,1) 36%, rgba(80,73,69,0.7763306005996149) 54%, rgba(40,40,40,0) 100%);
            opacity : win == 1 || win == 0 ? 0.3 : 0.5 ;
            animate y {
                duration: 1000ms;
                easing : ease-out-back;
            }
        }
        f_win_back := Image {
            y : 0;
            opacity : 0;
            source : @image-url("./win_back.png");
            animate opacity {
                duration : 200ms;
            }
        }

        gradBack := Rectangle {
            y : 450px;
            height : root.height * 1.2;
            width : root.width * 2;
            background : @linear-gradient(180deg, rgba(80,73,69,0) 0%, rgba(80,73,69,1) 36%, rgba(80,73,69,0.7763306005996149) 54%, rgba(40,40,40,0) 100%);
            
            animate y {
                duration: 1000ms;
                easing: ease-out-back;
            }
        }
        f_lose_back := Image {
            y : 0;
            opacity : 1;
            source: @image-url("./lose_back.png");
            animate opacity {
                duration : 200ms;
                easing : ease-out;
            }
        }

        win_lost := Text {
            text : win == 1 ? "win!" : win == 0 ? "lost" : "didn't win";
            y : 275px;
            opacity: 0;
            font-size : 70px;
            font-family : "JetBrains Mono";
            color : #ebdbb2;
            animate y, opacity, color {
                duration : 500ms;
                easing: ease-out-back;
            }
            animate font-size {
                duration : 400ms;
                easing : ease-out-back;
            }
        }
        subText := Text {
            horizontal-alignment: center;
            y : 280px;
            opacity : 0;
            font-size : 22px;
            font-weight : 100;
            text : pcString;
            color : #a89984;
            font-family : "JetBrains Mono";
            animate opacity {
                delay : 850ms;
                duration : 250ms;
            }
            animate y {
                delay : 750ms;
                duration : 250ms;
                easing : ease-out-quad;
            }
        }
        background : #282828;
        Roundovertext := Text {
            visible : true;
            y : (root.height - self.height)/2;
            text : "Round over!";
            font-size: 50px;
            font-family: "JetBrains Mono";
            color : #ebdbb2;

            animate opacity, y {
                 duration : 250ms;
                 easing : ease-out-back;
            }
        }
        YOU := Text {
            text : "you";
            opacity: 0;
            y : (root.height - self.height)/2;
            font-size : 70px;
            font-family : "JetBrains Mono";
            color : #ebdbb2;
            animate y {
                duration : 500ms;
                easing: ease-out-back;
            }
        }

    }
    // Text {
    //     text : game_over ? "true" : "false";
    // }
    // overTa := TouchArea{
    //     clicked => {
    //         overTimer.running = true;
    //     }
    // }
}

